version: '3'
services:
    nginx:
        image: nginx:alpine
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx/html:/etc/nginx/html:ro
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/users:/etc/nginx/users:ro
            - ./nginx/secrets:/etc/nginx/secrets:ro
            - kumanodocs_hanami_static:/var/kumanodocs-hanami:ro
            - ./kumanodocs-hanami/public/sw.js:/var/kumanodocs-hanami/sw.js:ro
            - kumanodocs_hanami_sock:/tmp/sockets
        links:
            - kumanodocs-hanami
            - menu
            - bukai-issue-creator
            - growi
            - ryosai
        depends_on:
            - kumanodocs-hanami
            - memo
            - menu
            - bukai-issue-creator
            - growi
            - ryosai
        environment:
            - TZ=`ls -la /etc/localtime | cut -d/ -f8-9`

    kumanodocs-hanami:
        build: kumanodocs-hanami
        expose:
            - "2300"
        volumes:
            - ./kumanodocs-hanami:/app
            - kumanodocs_hanami_static:/app/public
            - kumanodocs_hanami_sock:/tmp
            - /etc/localtime:/etc/localtime
        depends_on:
            - kumanodocs_postgres
        env_file:
            - ./kumanodocs-hanami/.env
    kumanodocs_postgres:
        image: postgres:11.3-alpine
        volumes:
            - postgres_database:/var/lib/postgresql/data
            - kumanodocs_hanami_sock:/var/run/postgresql
        env_file:
            - ./kumanodocs-hanami/.env.pg
        networks:
            backend:
                aliases:
                    - postgresdb

    memo:
        build:
            context: .
            dockerfile: hedgedoc/Dockerfile
            args:
                - "VERSION=master"
                - "HEDGEDOC_REPOSITORY=https://github.com/hedgedoc/hedgedoc.git"
        environment:
            - CMD_DB_URL=postgres://kd:kd@postgresdb:5432/hedgedoc
            - TZ=`ls -la /etc/localtime | cut -d/ -f8-9`
        expose:
            - "3000"
        networks:
            backend:
        volumes:
            - memo_uploads:/hedgedoc/public/uploads
            - kumanodocs_hanami_sock:/tmp
        restart: always
        depends_on:
            - kumanodocs_postgres

    menu:
        build: menu-sinatra
        expose:
            - "4567"
        volumes:
            - menu_database:/var/db
        environment:
            - TZ=`ls -la /etc/localtime | cut -d/ -f8-9`

    bukai-issue-creator:
        build: ./bukai-issue-creator
        expose:
            - "2000"
        env_file:
            - ./bukai-issue-creator/.env

    growi:
        build:
            context: ./growi
            dockerfile: ./Dockerfile
        expose:
            - "3000"
        links:
            - mongo:mongo
        depends_on:
            - mongo
        environment:
            - MONGO_URI=mongodb://mongo:27017/growi
            - PASSWORD_SEED=i52PBLrUgY8ak9wyT
            - FILE_UPLOAD=local     # activate this line if you use local storage of server rather than AWS
          # - MATHJAX=1             # activate this line if you want to use MathJax
          # - PLANTUML_URI=http://  # activate this line and specify if you use your own PlantUML server rather than public plantuml.com
          # - HACKMD_URI=http://    # activate this line and specify HackMD server URI which can be accessed from GROWI client browsers
          # - HACKMD_URI_FOR_SERVER=http://hackmd:3000  # activate this line and specify HackMD server URI which can be accessed from this server container
          # - FORCE_WIKI_MODE='public'    # activate this line to force wiki public mode
          # - FORCE_WIKI_MODE='private'   # activate this line to force wiki private mode

        command: "dockerize
                  -wait tcp://mongo:27017
                  -timeout 60s
                  npm run server:prod"
        restart: unless-stopped
        volumes:
            - growi_data:/data

    mongo:
        image: mongo:4.4
        expose:
            - "27017"
        restart: unless-stopped
        volumes:
            - mongo_configdb:/data/configdb
            - mongo_db:/data/db

    ryosai:
        build: ./ryosai2021
        expose:
            - "8000"
        volumes:
            - ./ryosai2021:/app
            - kumanodocs_hanami_sock:/tmp
        depends_on:
            - kumanodocs_postgres

    backup:
        build: ./backup
        volumes:
            - ./backup:/app
            - kumanodocs_hanami_sock:/tmp
            - menu_database:/bar/db/menu:ro
            - backup_tmp:/var/backup
        environment:
            - TZ=`ls -la /etc/localtime | cut -d/ -f8-9`

networks:
    backend:

volumes:
    postgres_database:
    kumanodocs_hanami_static:
    kumanodocs_hanami_sock:
    kumanodocs_database:
    memo_uploads:
    menu_database:
    growi_data:
    mongo_configdb:
    mongo_db:
    es_data:
    backup_tmp:
